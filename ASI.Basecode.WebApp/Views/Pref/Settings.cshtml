@using static ASI.Basecode.Resources.Views.SettingsScreen
@model ASI.Basecode.Services.ServiceModels.ProfileViewModel
@{
    ViewData["Title"] = "Settings";
    var isDarkMode = Context.Request.Cookies["darkMode"] == "true";
}

@await Html.PartialAsync("Sidebar")
<script src="~/js/ImagePreview/imageprev.js" asp-append-version="true"></script>
<script src="~/js/settings.js"></script>
<script src="~/js/DarkMode/darkmode.js" asp-append-version="true"></script>
<div class="flex h-screen w-screen flex-row dark:bg-black">
    <div class="hidden h-full w-1/6 md:flex">
    </div>
    <div class="h-full w-full md:w-5/6">
        <div class="flex h-auto min-h-full w-full flex-col rounded-lg bg-gray-100 from-violet-950 to-slate-950 dark:bg-gradient-to-b md:flex-row">
            <form asp-action="UpdateProfile" method="post" class="order-2 flex h-full w-full flex-col px-8 py-8 pb-20 md:w-1/2 md:order-1">
                <label class="text-2xl font-bold text-violet-500 dark:text-white">@SettingsHeader</label>

                <div class="mt-6 flex flex-col gap-6">
                    <label class="text-xl font-bold text-black dark:text-white" for="checkboxEmailUserName">@UserInfo</label>

                    <div class="relative">
                        <input id="userInput" asp-for="UpdateEmailOrUserName.NewUsername" type="text"
                               class="w-full rounded-lg border border-zinc-600 px-4 py-2 pr-12 dark:bg-violet-950 dark:text-white dark:border-2 dark:placeholder:text-white"
                               placeholder="Username" value=@Model.UserCode />
                        <span asp-validation-for="UpdateEmailOrUserName.NewUsername"
                              class="-translate-y-1/2 absolute right-5 transform text-xs text-red-500" style="top:35%"></span>
                    </div>
                    <div class="relative">
                        <input id="emailInput" "UpdateEmailOrUserName.NewEmail" type="email" class="w-full rounded-lg border border-zinc-600 px-4 py-2 pr-12 dark:bg-violet-950 dark:text-white dark:border-2 dark:placeholder:text-white"
                               placeholder="Email" value=@Model.Email />
                        <span asp-validation-for="UpdateEmailOrUserName.NewEmail"
                              class="-translate-y-1/2 absolute right-5 transform text-xs text-red-500" style="top:35%"></span>
                    </div>
                </div>

                <div class="mt-6 flex flex-col gap-6">
                    <div class="inline-flex gap-2">
                        <label class="mr-5 text-xl font-bold text-black dark:text-white">@PassManagement</label>
                        <input asp-for="IsPasswordChangeRequired" type="checkbox" id="togglePasswordChange" class="mt-2 rounded-lg border border-zinc-600" />
                    </div>

                    <!-- Container for password input fields -->
                    <div class="flex flex-col gap-6" id="passwordFields">
                        <div class="relative">
                            <input id="oldPass" input="oldInput" asp-for="UpdatePassword.OldPassword" type="password"
                                   class="w-full rounded-lg border border-zinc-600 px-4 py-2 pr-12 dark:bg-violet-950 dark:text-white dark:border-2 dark:placeholder:text-white"
                                   placeholder="Old Password" disabled />
                            <span asp-validation-for="UpdatePassword.OldPassword"
                                  class="-translate-y-1/2 absolute right-5 transform text-xs text-red-500" style="top:35%"></span>
                        </div>
                        <div class="relative">
                            <input id="newInput" asp-for="UpdatePassword.NewPassword" type="password"
                                   class="w-full rounded-lg border border-zinc-600 px-4 py-2 pr-12 dark:bg-violet-950 dark:text-white dark:border-2 dark:placeholder:text-white"
                                   placeholder="New Password" disabled />
                            <span asp-validation-for="UpdatePassword.NewPassword"
                                  class="-translate-y-1/2 absolute right-5 transform text-xs text-red-500" style="top:35%"></span>
                        </div>
                        <div class="relative">
                            <input id="confirmNewInput" asp-for="UpdatePassword.ConfirmPassword" type="password"
                                   class="w-full rounded-lg border border-zinc-600 px-4 py-2 pr-12 dark:bg-violet-950 dark:text-white dark:border-2 dark:placeholder:text-white"
                                   placeholder="Confirm Password" disabled />
                            <span asp-validation-for="UpdatePassword.ConfirmPassword"
                                  class="-translate-y-1/2 absolute right-5 transform text-xs text-red-500" style="top:35%"></span>
                        </div>
                    </div>
                </div>


                <div class="mt-6 flex w-full items-center justify-center">
                    <button id="submitBtn" type="submit"
                            class="w-32 rounded-full bg-violet-500 py-2 font-bold text-white drop-shadow-lg duration-300 hover:bg-violet-800">
                        @Submit
                    </button>
                </div>
            </form>


            <div class="order-1 flex h-full w-full flex-col px-8 pb-20 pt-8 md:w-1/2 md:order-2">
                <div class="flex h-52 w-full flex-col items-center justify-center gap-3">
                    <label class="text-xl font-bold text-black dark:text-white">@ProfileHeader</label>
                    <input asp-for=ProfilePicture type="file" accept="image/*" class="hidden" id="imgFile" onchange="setImagePreview(event)" value=@Model.ProfilePicture />
                    <img id="profileImage" src="@ViewBag.ProfilePic" class="h-32 w-32 rounded-full bg-transparent drop-shadow-lg" />
                    <label for="imgFile" class="mt-4 inline-block cursor-pointer rounded bg-violet-500 px-4 py-2 text-white duration-300 hover:bg-violet-800">
                        @Upload
                    </label>
                </div>
                <div class="flex flex-col gap-5">
                    <label class="text-xl font-bold text-black dark:text-white">@Preference</label>
                    <div class="flex flex-col">
                        <label class="mb-4 text-lg font-bold text-black dark:text-white">Dark Mode</label>
                        <label class="inline-flex cursor-pointer items-center drop-shadow-sm">
                            <input id="darkModeToggle" type="checkbox" class="peer sr-only drop-shadow-sm" onclick="setDarkModePreference(this.checked)">
                            <div class="relative drop-shadow-sm w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-500 dark:peer-focus:ring-green-500 rounded-full peer dark:bg-gray-400 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-violet-500 after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-violet-500 after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-green-500"></div>
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var errMessage = '@TempData["ErrorMessage"]';
        var changeFail = '@TempData["ChangeFail"]';
        var changeSuccess = '@TempData["ChangeSuccess"]';
        var changeUserNSuccess = '@TempData["ChangeUsernameSuccess"]';
        var changeEmailSuccess = '@TempData["ChangeEmailSuccess"]';
        var consoleDisplay = '@TempData["log"]'
        if (errMessage) {
            toastr.error(errMessage);
        }
        if (changeFail) {
            toastr.error(changeFail);
        }
        if (changeSuccess) {
            toastr.success(changeSuccess);
        }
        if (changeUserNSuccess) {
            toastr.success(changeUserNSuccess);
        }
        if (changeEmailSuccess) {
            toastr.success(changeEmailSuccess);
        }
        if (consoleDisplay) {
            console.log(consoleDisplay);
        }
    </script>
}